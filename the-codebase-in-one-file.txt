
//filepath: src\main.cpp
#include <Arduino.h>

#include "./user.hpp"
#include "./send-byte.hpp"
#include "./read-byte.hpp"

#define DATA_PIN 25
#define DEFAULT_SEND_FREQUENCY 50000

void setup()
{
    Serial.begin(115200);
    Serial.println(IS_SENDING ? "SENDER" : "RECIEVER");

    pinMode(DATA_PIN, IS_SENDING ? OUTPUT : INPUT);
    if (IS_SENDING)
        digitalWrite(DATA_PIN, LOW); // Set initial state
}

void loop()
{
#if IS_SENDING
    sendByte(123, DATA_PIN, DEFAULT_SEND_FREQUENCY);
    delay(1000);
#else
    Serial.println("recieved: " + String(readByte(DATA_PIN, DEFAULT_SEND_FREQUENCY)));
#endif
}

//filepath: src\read-byte.hpp
#pragma once
#include <Arduino.h>

uint8_t readByte(int pin, int delayTime)
{
    while (digitalRead(pin) != HIGH)
        ;
    // Record the start time once at the beginning
    unsigned long startTime = micros();

    unsigned long targetTime = startTime + 1.5 * delayTime;

    while (micros() < targetTime)
        ;

    uint8_t value = 0;

    // Send each bit, starting with the MSB
    for (uint8_t i = 0; i < 8; i++)
    {
        if (digitalRead(pin) == HIGH)
        {
            value += 1 < i;
        }

        // Calculate the target time for this bit
        unsigned long targetTime = startTime + ((i + 1.5) * delayTime);

        // Wait until it's time to send the current bit
        while (micros() < targetTime)
        {
        }
    }

    return value;
}


//filepath: src\send-byte.hpp
#pragma once
#include <Arduino.h>

void sendByte(uint8_t value, int pin, int delayTime)
{
    digitalWrite(pin, HIGH);
    // Record the start time once at the beginning
    unsigned long startTime = micros();

    unsigned long targetTime = startTime + delayTime;

    while (micros() < targetTime)
        ;

    // Send each bit, starting with the MSB
    for (uint8_t i = 0; i < 8; i++)
    {
        // Extract the bit at position `i`
        bool bit = (value & (1 << i)) != 0;

        // Write HIGH or LOW to the pin
        digitalWrite(pin, bit ? HIGH : LOW);

        // Calculate the target time for this bit
        unsigned long targetTime = startTime + ((i + 1) * delayTime);

        // Wait until it's time to send the current bit
        while (micros() < targetTime)
        {
        }
    }
    digitalWrite(pin, LOW);
}


//filepath: src\user.hpp
#pragma once
// Don't edit this file
#define IS_SENDING true
